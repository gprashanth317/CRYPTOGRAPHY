import string

print("Playfair Cipher Encryption (No Functions)")

# Input
keyword = input("Enter the keyword: ").upper().replace('J', 'I')
plaintext = input("Enter the plaintext message: ").upper().replace('J', 'I')
plaintext = ''.join(filter(str.isalpha, plaintext))

# Create 5x5 matrix
seen = set()
matrix_flat = []

for char in keyword:
    if char not in seen and char.isalpha():
        seen.add(char)
        matrix_flat.append(char)

for char in string.ascii_uppercase:
    if char != 'J' and char not in seen:
        seen.add(char)
        matrix_flat.append(char)

matrix = [matrix_flat[i*5:(i+1)*5] for i in range(5)]

# Display matrix
print("\n5x5 Matrix:")
for row in matrix:
    print(" ".join(row))

# Prepare plaintext in digraphs
i = 0
prepared = ""
while i < len(plaintext):
    a = plaintext[i]
    b = ''
    if i + 1 < len(plaintext):
        b = plaintext[i + 1]
        if a == b:
            b = 'X'
            i += 1
        else:
            i += 2
    else:
        b = 'X'
        i += 1
    prepared += a + b

# Encrypt digraphs
ciphertext = ""
i = 0
while i < len(prepared):
    a = prepared[i]
    b = prepared[i + 1]

    # Find positions
    for row in range(5):
        for col in range(5):
            if matrix[row][col] == a:
                row1, col1 = row, col
            if matrix[row][col] == b:
                row2, col2 = row, col

    if row1 == row2:
        # Same row
        ciphertext += matrix[row1][(col1 + 1) % 5]
        ciphertext += matrix[row2][(col2 + 1) % 5]
    elif col1 == col2:
        # Same column
        ciphertext += matrix[(row1 + 1) % 5][col1]
        ciphertext += matrix[(row2 + 1) % 5][col2]
    else:
        # Rectangle swap
        ciphertext += matrix[row1][col2]
        ciphertext += matrix[row2][col1]

    i += 2

# Output
print("\nPrepared Plaintext:", prepared)
print("Encrypted Ciphertext:", ciphertext)
